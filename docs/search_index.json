[
["index.html", "MSDR Package Documentation Prerequisites", " MSDR Package Documentation AH Uyekita 2019-02-22 Prerequisites # Installing the Mastering Software Development in R Capstone. devtools::install_github(&quot;AndersonUyekita/JHU_MSDR_Capstone&quot;) "],
["eq-clean-data.html", "Chapter 1 eq_clean_data 1.1 Loading the data 1.2 Creating new features 1.3 Conversion Process 1.4 Cleaning Process 1.5 Example 1 1.6 Example 2", " Chapter 1 eq_clean_data This function has two behaviours: When you assign a file to load, and; # Loading the &#39;signif.txt&#39; file. eq_clean_data(file_name = system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;)) When you pipe a dataset already loaded. # Pipe. readr::read_delim(&quot;signif.txt&quot;, delim = &quot;\\t&quot;) %&gt;% eq_clean_data() 1.1 Loading the data This function also loads the Earthquake database from NOAA. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Printing the first 5 rows. head(df) %&gt;% select(I_D, YEAR, LOCATION_NAME, EQ_PRIMARY, TOTAL_DEATHS) %&gt;% kable() I_D YEAR LOCATION_NAME EQ_PRIMARY TOTAL_DEATHS 1 -2150 JORDAN: BAB-A-DARAA,AL-KARAK 7.3 NA 3 -2000 TURKMENISTAN: W 7.1 1 2 -2000 SYRIA: UGARIT NA NA 5877 -1610 GREECE: THERA ISLAND (SANTORINI) NA NA 8 -1566 ISRAEL: ARIHA (JERICHO) NA NA 11 -1450 ITALY: LACUS CIMINI NA NA As you can see, there are several observations with NA values. 1.2 Creating new features The eq_clean_data creates the DATE variable binding the columns YEAR, MONTH, and DAY. All this using the Lubridate package. # Creating a new feature. df &lt;- df %&gt;% mutate(DATE = lubridate::ymd(paste(df$YEAR, # YEAR column df$MONTH, # MONTH column df$DAY, # DAY column sep = &quot;/&quot;))) # YYYY/MM/DD 1.3 Conversion Process I have converted the class of some features: TOTAL_DEATHS to numeric; EQ_PRIMARY to numeric; All NA’s of TOTAL_DEATHS in zeros. 1.4 Cleaning Process I have removed: All observations flagged as Tsunami, and; All observations with no Date. 1.5 Example 1 How to load a txt file. # Load the package library(msdr) # Define as file_name the txt file. df &lt;- eq_clean_data(file_name = raw_data_path) # Dimensions of the loaded dataframe. dim(df) #&gt; [1] 2840 49 1.6 Example 2 Piping a dataset to the eq_clean_data. # Load the package library(msdr) # Piping a read_delim with eq_clean_data. readr::read_delim(raw_data_path, delim = &quot;\\t&quot;) %&gt;% eq_clean_data() -&gt; df # Dimensions of the loaded dataframe. dim(df) #&gt; [1] 2840 49 "],
["eq-location-clean.html", "Chapter 2 eq_location_clean 2.1 Introduction 2.2 Example", " Chapter 2 eq_location_clean 2.1 Introduction This function creates a new column with the earthquake LOCATION. The function eq_clean_data uses it behind the scenes, so it is not necessary to call this function after call eq_clean_data. 2.2 Example Piping a raw data to creates a LOCATION column. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Printing some columns. df %&gt;% eq_location_clean() %&gt;% # Selecting some features. select(YEAR, COUNTRY, LOCATION, EQ_PRIMARY, TOTAL_DEATHS) %&gt;% # Filtering. filter(YEAR &gt; 1990 &amp; YEAR &lt; 2019) %&gt;% # Show the first 10 rows. head(10) %&gt;% # Enhance table visualization. kable() YEAR COUNTRY LOCATION EQ_PRIMARY TOTAL_DEATHS 1991 MYANMAR (BURMA) Thabeikkyin, Mandalay 7.1 NA 1991 AFGHANISTAN Badakhstan, Baghlan, Laghman, Nagarhar 6.4 848 1991 SOLOMON ISLANDS Solomon Islands 6.9 NA 1991 FRANCE France 3.8 9 1991 RUSSIA Kuril Islands 5.7 NA 1991 BERING SEA Bering Sea 6.7 NA 1991 CHINA Kalpin 6.1 NA 1991 CHINA Ne, Datong 5.5 NA 1991 PERU Rioja, Neuva Cajamarca 6.4 NA 1991 PERU Rioja, Moyobamba, Nueva Cajamarca 6.7 53 As you can see, the LOCATION column has only cities in Title Case mode. "],
["geom-timeline.html", "Chapter 3 geom_timeline 3.1 Example 1 3.2 Example 2", " Chapter 3 geom_timeline The geom_timeline is a new geom_* of ggplot2 package that aims to enhance the visualization of earthquake. This Geom has some configuration: size: The earthquakes as displayed as circles with different radius (according to the EQ_PRIMARY); color: This is based on the TOTAL_DEATHS; x axis: This is the temporal axis. y axis: Each county has your own line, it is not possible to mix countries in a single y axis. 3.1 Example 1 Let’s plot the earthquake from 1000 to 2000, which occured in JAPAN. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Cleaning the data and filtering. df %&gt;% eq_clean_data() %&gt;% filter(COUNTRY %in% &#39;JAPAN&#39;, YEAR &gt;= 1000 &amp; YEAR &lt;= 2000) %&gt;% # Creating a ggplot object ggplot() + # Using the new Geom geom_timeline(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = TOTAL_DEATHS)) + # Adding theme. theme_msdr() + # Editing the legends&#39; titles labs(size = &quot;Richter scale value&quot;, color = &quot;# deaths&quot;) Most of earthquake records in Japan are concentrated between 1900 and 2000. 3.2 Example 2 The earthquake record of 2018. Simple comparison. # List of countries in Europe and &quot;West Asia&quot;. This is not an exhaustive list. eurasia &lt;- c(&#39;SPAIN&#39;,&#39;GREECE&#39;,&#39;TURKEY&#39;,&#39;PORTUGAL&#39;,&#39;RUSSIA&#39;,&#39;FRANCE&#39;,&#39;MACEDONIA&#39;,&#39;BULGARIA&#39;, &#39;ALBANIA&#39;,&#39;GEORGIA&#39;,&#39;ITALY&#39;,&#39;SLOVENIA&#39;,&#39;UK&#39;,&#39;CYPRUS&#39;,&#39;UKRAINE&#39;,&#39;CROATIA&#39;,&#39;AUSTRIA&#39;) # Cleaninig data and filtering. df %&gt;% eq_clean_data() %&gt;% # Creating a new feature. mutate(CONTINENT = case_when(COUNTRY %in% eurasia ~ &quot;EURASIA&quot;, !(COUNTRY %in% eurasia) ~ &quot;WORLD&quot;)) %&gt;% # Filtering. filter(YEAR &gt;= 2018 &amp; YEAR &lt;= 2019) %&gt;% # Creating a ggplot object ggplot() + # Using the new Geom geom_timeline(aes(x = DATE, y = CONTINENT, size = EQ_PRIMARY, color = TOTAL_DEATHS)) + # Adding theme. theme_msdr() + # Editing the legends&#39; titles labs(size = &quot;Richter scale value&quot;, color = &quot;# deaths&quot;) "],
["geomtimeline.html", "Chapter 4 GeomTimeline 4.1 Example", " Chapter 4 GeomTimeline This function acts behind the scenes creating all the visuals to be displayed by the geom_timeline. Although this function is wrapped by the geom_timeline you can still use it by the use of ggplot2::layer. 4.1 Example Using ggplot2::layer to plot the visuals of GeomTimeline. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Cleaning and Creating LOCATION column. df_clean &lt;- df %&gt;% eq_clean_data() %&gt;% filter(COUNTRY %in% c(&#39;CANADA&#39;,&#39;USA&#39;,&#39;MEXICO&#39;)) # Plotting using layer. ggplot2::ggplot() + ggplot2::layer(geom = GeomTimeline, mapping = aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = TOTAL_DEATHS), data = df_clean, stat = &#39;identity&#39;, position = &#39;identity&#39;, show.legend = NA, inherit.aes = TRUE, params = list(na.rm = FALSE)) + theme_msdr() "],
["geom-timeline-label.html", "Chapter 5 geom_timeline_label 5.1 Example 1", " Chapter 5 geom_timeline_label The geom_timeline_label is a complementary geom to aggregate notations to the geom_timeline. Using this geom you can add labels to the n_max most deadly earthquake. The configuration is almost the same of geom_timeline. mag: The magnitude of the earthquake; label: The Location of the earthquake; n_max: Number of earthquake to be highlighted using the notation; x axis: This is the temporal axis. y axis: Each county has your own line, it is not possible to mix countries in a single y axis. 5.1 Example 1 Let’s plot the earthquake from 1900 to 2000, which occured in CHINA and TURKEY. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Cleaning the data and filtering. df %&gt;% eq_clean_data() %&gt;% filter(COUNTRY %in% c(&#39;CHINA&#39;,&#39;TURKEY&#39;), YEAR &gt;= 1900 &amp; YEAR &lt;= 2000) %&gt;% # Creating a ggplot object ggplot() + # Using the new Geom geom_timeline(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = TOTAL_DEATHS)) + # Adding notation. geom_timeline_label(aes(x = DATE, y = COUNTRY, mag = EQ_PRIMARY, label = LOCATION, n_max = 10)) + # Adding theme. theme_msdr() + # Editing the legends&#39; titles labs(size = &quot;Richter scale value&quot;, color = &quot;# deaths&quot;) "],
["geomtimelinelabel.html", "Chapter 6 GeomTimelineLabel 6.1 Example", " Chapter 6 GeomTimelineLabel This geom_* performs the labels annotation on the geom_timeline plots. 6.1 Example Using ggplot2::layer to plot the visuals of GeomTimelineLabel. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Cleaning and Creating LOCATION column. df_clean &lt;- df %&gt;% eq_clean_data() %&gt;% filter(COUNTRY %in% c(&#39;CHILE&#39;, &#39;COLOMBIA&#39;,&#39;ECUADOR&#39;, &#39;PERU&#39;, &#39;PARAGUAY&#39;,&#39;URUGUAY&#39;, &#39;BRAZIL&#39;, &#39;BOLIVIA&#39;, &#39;ARGENTINA&#39;)) # Creating a simple geom_timeline plot. simple_plot &lt;- df_clean %&gt;% ggplot2::ggplot() + msdr::geom_timeline(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = TOTAL_DEATHS)) # Adding the labels annotation using ggplot2::layer simple_plot + ggplot2::layer(geom = GeomTimelineLabel, mapping = aes(x = DATE, label = LOCATION, y = COUNTRY, mag = EQ_PRIMARY, color = TOTAL_DEATHS, n_max = 10), data = df_clean, stat = &#39;identity&#39;, position = &#39;identity&#39;, show.legend = NA, inherit.aes = TRUE, params = list(na.rm = FALSE)) + theme_msdr() "],
["eq-map.html", "Chapter 7 eq_map 7.1 Example 1 7.2 Example 2", " Chapter 7 eq_map This function plots circles on OpenStreetMaps, which represents earthquakes. When you click in it appaers a popup, which shows a single information (that you define as annot_col). 7.1 Example 1 Plotting circles and popup Date of earthquake. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Ploting all earthquakes from 1500 to 1700. df %&gt;% # Converting data, cleaning and creating. eq_clean_data() %&gt;% #Filtering. filter(YEAR &gt; 1500 &amp; YEAR &lt; 1700) %&gt;% # Adding circles and popups. eq_map(annot_col = &#39;DATE&#39;) The popups shows the DATE when you click the circle. 7.2 Example 2 Popup showing the Location of earthquake. # Ploting all earthquakes from 1500 to 1700. df %&gt;% # Converting data, cleaning and creating. eq_clean_data() %&gt;% #Filtering. filter(YEAR &gt; 1000 &amp; YEAR &lt; 2019, COUNTRY %in% &#39;CHILE&#39;) %&gt;% # Adding circles and popups. eq_map(annot_col = &#39;LOCATION&#39;) In this example I have selected the earthquakes in Chile. The function has autozoom to fit the circles in the view. "],
["eq-create-label.html", "Chapter 8 eq_create_label 8.1 Example 1 8.2 Example 2", " Chapter 8 eq_create_label This function compounds a new information to be displayed in a popup of Leaflet package. For this reason, the dataset should have LOCATION, EQ_PRIMARY and DATE. 8.1 Example 1 The next example only show the content of each popup of Leaflet map. # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Display the informaiton of each popup. df %&gt;% eq_create_label() %&gt;% head() %&gt;% kable() x &lt;b&gt;Location: &lt;/b&gt;&lt;br&gt;&lt;b&gt;Magnitude: &lt;/b&gt; 7.3&lt;br&gt;&lt;b&gt;Total deaths: &lt;/b&gt;NA &lt;b&gt;Location: &lt;/b&gt;&lt;br&gt;&lt;b&gt;Magnitude: &lt;/b&gt; 7.1&lt;br&gt;&lt;b&gt;Total deaths: &lt;/b&gt; 1 &lt;b&gt;Location: &lt;/b&gt;&lt;br&gt;&lt;b&gt;Magnitude: &lt;/b&gt;NA&lt;br&gt;&lt;b&gt;Total deaths: &lt;/b&gt;NA &lt;b&gt;Location: &lt;/b&gt;&lt;br&gt;&lt;b&gt;Magnitude: &lt;/b&gt;NA&lt;br&gt;&lt;b&gt;Total deaths: &lt;/b&gt;NA &lt;b&gt;Location: &lt;/b&gt;&lt;br&gt;&lt;b&gt;Magnitude: &lt;/b&gt;NA&lt;br&gt;&lt;b&gt;Total deaths: &lt;/b&gt;NA &lt;b&gt;Location: &lt;/b&gt;&lt;br&gt;&lt;b&gt;Magnitude: &lt;/b&gt;NA&lt;br&gt;&lt;b&gt;Total deaths: &lt;/b&gt;NA 8.2 Example 2 This example shows the complete case of plotting a popup with Location, Magnitude and date. # Display the informaiton of each popup. df %&gt;% # Cleaninig the data. eq_clean_data() %&gt;% # Creating new content. dplyr::mutate(popup_text = eq_create_label(.)) %&gt;% # Plotting new content inside of popup. eq_map(annot_col = &quot;popup_text&quot;) "],
["theme-msdr.html", "Chapter 9 theme_msdr 9.1 Example", " Chapter 9 theme_msdr I have decided to create a new theme because it is a good opportunity to doing it so I have used the default theme and I have changed some visuals. As you can see, I have made a great effort to make it be similar to the example posted in class notebooks. 9.1 Example Adding theme to a regular plotting of earthquake. Without theme: # Path to the raw data. raw_data_path &lt;- system.file(&quot;extdata&quot;, &quot;signif.txt&quot;, package = &quot;msdr&quot;) # Loading the dataset of Earthquake. df &lt;- readr::read_delim(file = raw_data_path, delim = &#39;\\t&#39;, col_names = TRUE, progress = FALSE, col_types = readr::cols()) # Cleaning the data and filtering. df %&gt;% eq_clean_data() %&gt;% filter(COUNTRY %in% &#39;USA&#39;, YEAR &gt;= 1900 &amp; YEAR &lt;= 2000) %&gt;% # Creating a ggplot object ggplot() + # Using the new Geom geom_timeline(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = TOTAL_DEATHS)) -&gt; earthquake_usa_1900_2000 # Plotting earthquake_usa_1900_2000 Adding theme: # Adding theme. earthquake_usa_1900_2000 + theme_msdr() "],
["references.html", "References", " References "]
]
